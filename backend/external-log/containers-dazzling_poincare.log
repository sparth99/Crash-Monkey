2020-04-02T18:22:22.045944100Z root@ea447e0d0c25:/src# timeout2020-04-02T18:22:22.066458300Z Try 'timeout --help' for more information.2020-04-02T18:22:30.761245100Z root@ea447e0d0c25:/src# timeout --help2020-04-02T18:22:30.761870400Z Usage: timeout [OPTION] DURATION COMMAND [ARG]...2020-04-02T18:22:30.762147100Z   or:  timeout [OPTION]2020-04-02T18:22:30.762216700Z Start COMMAND, and kill it if still running after DURATION.2020-04-02T18:22:30.762307000Z 2020-04-02T18:22:30.762376900Z Mandatory arguments to long options are mandatory for short options too.2020-04-02T18:22:30.762423200Z       --preserve-status2020-04-02T18:22:30.762500800Z                  exit with the same status as COMMAND, even when the2020-04-02T18:22:30.762540400Z                    command times out2020-04-02T18:22:30.762577700Z       --foreground2020-04-02T18:22:30.762702600Z                  when not running timeout directly from a shell prompt,2020-04-02T18:22:30.762762500Z                    allow COMMAND to read from the TTY and get TTY signals;2020-04-02T18:22:30.762812400Z                    in this mode, children of COMMAND will not be timed out2020-04-02T18:22:30.762887800Z   -k, --kill-after=DURATION2020-04-02T18:22:30.763719900Z                  also send a KILL signal if COMMAND is still running2020-04-02T18:22:30.763921700Z                    this long after the initial signal was sent2020-04-02T18:22:30.764083800Z   -s, --signal=SIGNAL2020-04-02T18:22:30.764189500Z                  specify the signal to be sent on timeout;2020-04-02T18:22:30.764325200Z                    SIGNAL may be a name like 'HUP' or a number;2020-04-02T18:22:30.764468300Z                    see 'kill -l' for a list of signals2020-04-02T18:22:30.764628300Z   -v, --verbose  diagnose to stderr any signal sent upon timeout2020-04-02T18:22:30.764731400Z       --help     display this help and exit2020-04-02T18:22:30.764784100Z       --version  output version information and exit2020-04-02T18:22:30.764855600Z 2020-04-02T18:22:30.765105200Z DURATION is a floating point number with an optional suffix:2020-04-02T18:22:30.765477400Z 's' for seconds (the default), 'm' for minutes, 'h' for hours or 'd' for days.2020-04-02T18:22:30.765557000Z A duration of 0 disables the associated timeout.2020-04-02T18:22:30.765714100Z 2020-04-02T18:22:30.765999200Z If the command times out, and --preserve-status is not set, then exit with2020-04-02T18:22:30.766138300Z status 124.  Otherwise, exit with the status of COMMAND.  If no signal2020-04-02T18:22:30.766251800Z is specified, send the TERM signal upon timeout.  The TERM signal kills2020-04-02T18:22:30.766385000Z any process that does not block or catch that signal.  It may be necessary2020-04-02T18:22:30.766561000Z to use the KILL (9) signal, since this signal cannot be caught, in which2020-04-02T18:22:30.767026600Z case the exit status is 128+9 rather than 124.2020-04-02T18:22:30.767082000Z 2020-04-02T18:22:30.767459400Z GNU coreutils online help: <https://www.gnu.org/software/coreutils/>2020-04-02T18:22:30.767507100Z Report timeout translation bugs to <https://translationproject.org/team/>2020-04-02T18:22:30.767542000Z Full documentation at: <https://www.gnu.org/software/coreutils/timeout>2020-04-02T18:22:30.767732700Z or available locally via: info '(coreutils) timeout invocation'2020-04-02T18:23:07.710151900Z root@ea447e0d0c25:/src# 2020-04-02T18:23:07.817340400Z root@ea447e0d0c25:/src# 2020-04-02T18:23:07.943776100Z root@ea447e0d0c25:/src# 2020-04-02T18:23:08.088782500Z root@ea447e0d0c25:/src# 2020-04-02T18:23:08.218981300Z root@ea447e0d0c25:/src# 2020-04-02T18:23:08.385874600Z root@ea447e0d0c25:/src# 2020-04-02T18:23:08.547044000Z root@ea447e0d0c25:/src# 2020-04-02T18:23:13.352125000Z root@ea447e0d0c25:/src# ps =a[K=[K[K-aux2020-04-02T18:23:13.376758800Z USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND2020-04-02T18:23:13.377215800Z root         1  0.0  0.0   2388   740 pts/0    Ss   18:17   0:00 /bin/sh -c bash2020-04-02T18:23:13.378170800Z root         6  0.0  0.1   5752  3496 pts/0    S    18:17   0:00 bash2020-04-02T18:23:13.378218500Z root         9  0.0  0.1   9392  2920 pts/0    R+   18:23   0:00 ps -aux2020-04-02T18:23:45.421673100Z root@ea447e0d0c25:/src# ps -auxtimeout --help[K[Kps -aux2020-04-02T18:23:45.482906000Z USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND2020-04-02T18:23:45.482974900Z root         1  0.0  0.0   2388    68 pts/0    Ss   18:17   0:00 /bin/sh -c bash2020-04-02T18:23:45.484124300Z root         6  0.0  0.0   5752  1420 pts/0    S    18:17   0:00 bash2020-04-02T18:23:45.485403600Z root        10  0.1  0.0   3848    84 ?        Ss   18:23   0:00 stress --cpu 3 2020-04-02T18:23:45.486714900Z root        16 35.6  0.0   3848   104 ?        R    18:23   0:06 stress --cpu 3 2020-04-02T18:23:45.488343100Z root        17  8.9  0.0   4752  1116 ?        R    18:23   0:01 stress --cpu 3 2020-04-02T18:23:45.489956300Z root        18 31.8  0.0   3848   104 ?        R    18:23   0:06 stress --cpu 3 2020-04-02T18:23:45.493613200Z root        19  8.6  0.0   4752  1116 ?        R    18:23   0:01 stress --cpu 3 2020-04-02T18:23:45.502304400Z root        20 34.8  0.0   3848   104 ?        R    18:23   0:06 stress --cpu 3 2020-04-02T18:23:45.503691600Z root        21  8.6  0.0   4752  1116 ?        R    18:23   0:01 stress --cpu 3 2020-04-02T18:23:45.505842700Z root        22  9.7  0.0   4752  1116 ?        R    18:23   0:01 stress --cpu 3 2020-04-02T18:23:45.542905900Z root        23 10.2  0.0   4752  1116 ?        R    18:23   0:01 stress --cpu 3 2020-04-02T18:23:45.545316000Z root        24  0.1  0.0   4240    84 ?        Ss   18:23   0:00 timeout 120 pyt2020-04-02T18:23:45.545373500Z root        29  5.2  1.0  33696 21972 ?        S    18:23   0:00 python app.py2020-04-02T18:23:45.545504800Z root        31  5.2  1.1  33196 23956 ?        R    18:23   0:00 /usr/local/bin/2020-04-02T18:23:45.545523900Z root        33  0.0  0.1   9392  2936 pts/0    R+   18:23   0:00 ps -aux2020-04-02T18:22:22.045944100Z root@ea447e0d0c25:/src# timeout2020-04-02T18:22:22.066458300Z Try 'timeout --help' for more information.2020-04-02T18:22:30.761245100Z root@ea447e0d0c25:/src# timeout --help2020-04-02T18:22:30.761870400Z Usage: timeout [OPTION] DURATION COMMAND [ARG]...2020-04-02T18:22:30.762147100Z   or:  timeout [OPTION]2020-04-02T18:22:30.762216700Z Start COMMAND, and kill it if still running after DURATION.2020-04-02T18:22:30.762307000Z 2020-04-02T18:22:30.762376900Z Mandatory arguments to long options are mandatory for short options too.2020-04-02T18:22:30.762423200Z       --preserve-status2020-04-02T18:22:30.762500800Z                  exit with the same status as COMMAND, even when the2020-04-02T18:22:30.762540400Z                    command times out2020-04-02T18:22:30.762577700Z       --foreground2020-04-02T18:22:30.762702600Z                  when not running timeout directly from a shell prompt,2020-04-02T18:22:30.762762500Z                    allow COMMAND to read from the TTY and get TTY signals;2020-04-02T18:22:30.762812400Z                    in this mode, children of COMMAND will not be timed out2020-04-02T18:22:30.762887800Z   -k, --kill-after=DURATION2020-04-02T18:22:30.763719900Z                  also send a KILL signal if COMMAND is still running2020-04-02T18:22:30.763921700Z                    this long after the initial signal was sent2020-04-02T18:22:30.764083800Z   -s, --signal=SIGNAL2020-04-02T18:22:30.764189500Z                  specify the signal to be sent on timeout;2020-04-02T18:22:30.764325200Z                    SIGNAL may be a name like 'HUP' or a number;2020-04-02T18:22:30.764468300Z                    see 'kill -l' for a list of signals2020-04-02T18:22:30.764628300Z   -v, --verbose  diagnose to stderr any signal sent upon timeout2020-04-02T18:22:30.764731400Z       --help     display this help and exit2020-04-02T18:22:30.764784100Z       --version  output version information and exit2020-04-02T18:22:30.764855600Z 2020-04-02T18:22:30.765105200Z DURATION is a floating point number with an optional suffix:2020-04-02T18:22:30.765477400Z 's' for seconds (the default), 'm' for minutes, 'h' for hours or 'd' for days.2020-04-02T18:22:30.765557000Z A duration of 0 disables the associated timeout.2020-04-02T18:22:30.765714100Z 2020-04-02T18:22:30.765999200Z If the command times out, and --preserve-status is not set, then exit with2020-04-02T18:22:30.766138300Z status 124.  Otherwise, exit with the status of COMMAND.  If no signal2020-04-02T18:22:30.766251800Z is specified, send the TERM signal upon timeout.  The TERM signal kills2020-04-02T18:22:30.766385000Z any process that does not block or catch that signal.  It may be necessary2020-04-02T18:22:30.766561000Z to use the KILL (9) signal, since this signal cannot be caught, in which2020-04-02T18:22:30.767026600Z case the exit status is 128+9 rather than 124.2020-04-02T18:22:30.767082000Z 2020-04-02T18:22:30.767459400Z GNU coreutils online help: <https://www.gnu.org/software/coreutils/>2020-04-02T18:22:30.767507100Z Report timeout translation bugs to <https://translationproject.org/team/>2020-04-02T18:22:30.767542000Z Full documentation at: <https://www.gnu.org/software/coreutils/timeout>2020-04-02T18:22:30.767732700Z or available locally via: info '(coreutils) timeout invocation'2020-04-02T18:23:07.710151900Z root@ea447e0d0c25:/src# 2020-04-02T18:23:07.817340400Z root@ea447e0d0c25:/src# 2020-04-02T18:23:07.943776100Z root@ea447e0d0c25:/src# 2020-04-02T18:23:08.088782500Z root@ea447e0d0c25:/src# 2020-04-02T18:23:08.218981300Z root@ea447e0d0c25:/src# 2020-04-02T18:23:08.385874600Z root@ea447e0d0c25:/src# 2020-04-02T18:23:08.547044000Z root@ea447e0d0c25:/src# 2020-04-02T18:23:13.352125000Z root@ea447e0d0c25:/src# ps =a[K=[K[K-aux2020-04-02T18:23:13.376758800Z USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND2020-04-02T18:23:13.377215800Z root         1  0.0  0.0   2388   740 pts/0    Ss   18:17   0:00 /bin/sh -c bash2020-04-02T18:23:13.378170800Z root         6  0.0  0.1   5752  3496 pts/0    S    18:17   0:00 bash2020-04-02T18:23:13.378218500Z root         9  0.0  0.1   9392  2920 pts/0    R+   18:23   0:00 ps -aux2020-04-02T18:23:45.421673100Z root@ea447e0d0c25:/src# ps -auxtimeout --help[K[Kps -aux2020-04-02T18:23:45.482906000Z USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND2020-04-02T18:23:45.482974900Z root         1  0.0  0.0   2388    68 pts/0    Ss   18:17   0:00 /bin/sh -c bash2020-04-02T18:23:45.484124300Z root         6  0.0  0.0   5752  1420 pts/0    S    18:17   0:00 bash2020-04-02T18:23:45.485403600Z root        10  0.1  0.0   3848    84 ?        Ss   18:23   0:00 stress --cpu 3 2020-04-02T18:23:45.486714900Z root        16 35.6  0.0   3848   104 ?        R    18:23   0:06 stress --cpu 3 2020-04-02T18:23:45.488343100Z root        17  8.9  0.0   4752  1116 ?        R    18:23   0:01 stress --cpu 3 2020-04-02T18:23:45.489956300Z root        18 31.8  0.0   3848   104 ?        R    18:23   0:06 stress --cpu 3 2020-04-02T18:23:45.493613200Z root        19  8.6  0.0   4752  1116 ?        R    18:23   0:01 stress --cpu 3 2020-04-02T18:23:45.502304400Z root        20 34.8  0.0   3848   104 ?        R    18:23   0:06 stress --cpu 3 2020-04-02T18:23:45.503691600Z root        21  8.6  0.0   4752  1116 ?        R    18:23   0:01 stress --cpu 3 2020-04-02T18:23:45.505842700Z root        22  9.7  0.0   4752  1116 ?        R    18:23   0:01 stress --cpu 3 2020-04-02T18:23:45.542905900Z root        23 10.2  0.0   4752  1116 ?        R    18:23   0:01 stress --cpu 3 2020-04-02T18:23:45.545316000Z root        24  0.1  0.0   4240    84 ?        Ss   18:23   0:00 timeout 120 pyt2020-04-02T18:23:45.545373500Z root        29  5.2  1.0  33696 21972 ?        S    18:23   0:00 python app.py2020-04-02T18:23:45.545504800Z root        31  5.2  1.1  33196 23956 ?        R    18:23   0:00 /usr/local/bin/2020-04-02T18:23:45.545523900Z root        33  0.0  0.1   9392  2936 pts/0    R+   18:23   0:00 ps -aux2020-04-02T18:26:06.727027800Z root@ea447e0d0c25:/src# ps -auxtimeout --help[7Pps -aux2020-04-02T18:26:06.820118600Z USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND2020-04-02T18:26:06.822417200Z root         1  0.0  0.0   2388    68 pts/0    Ss   18:17   0:00 /bin/sh -c bash2020-04-02T18:26:06.827146500Z root         6  0.0  0.1   5752  2992 pts/0    S    18:17   0:00 bash2020-04-02T18:26:06.835581800Z root        10  0.0  0.0   3848    84 ?        Ss   18:23   0:00 stress --cpu 3 2020-04-02T18:26:06.838045800Z root        16 38.4  0.0   3848   104 ?        R    18:23   1:01 stress --cpu 3 2020-04-02T18:26:06.847897400Z root        17  8.0  0.0   4752  1116 ?        R    18:23   0:12 stress --cpu 3 2020-04-02T18:26:06.849621200Z root        18 38.0  0.0   3848   104 ?        R    18:23   1:00 stress --cpu 3 2020-04-02T18:26:06.853914600Z root        19  8.0  0.0   4752  1116 ?        R    18:23   0:12 stress --cpu 3 2020-04-02T18:26:06.854834800Z root        20 38.3  0.0   3848   104 ?        R    18:23   1:01 stress --cpu 3 2020-04-02T18:26:06.855599600Z root        21  8.1  0.0   4752  1116 ?        R    18:23   0:13 stress --cpu 3 2020-04-02T18:26:06.856477400Z root        22  8.2  0.0   4752  1116 ?        R    18:23   0:13 stress --cpu 3 2020-04-02T18:26:06.865771400Z root        23  8.2  0.0   4752  1116 ?        R    18:23   0:13 stress --cpu 3 2020-04-02T18:26:06.866022500Z root        35  0.0  0.1   9392  2952 pts/0    R+   18:26   0:00 ps -aux2020-04-02T18:26:46.068244000Z root@ea447e0d0c25:/src# ps -aux2020-04-02T18:26:46.151336600Z USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND2020-04-02T18:26:46.158309200Z root         1  0.0  0.0   2388    68 pts/0    Ss   18:17   0:00 /bin/sh -c bash2020-04-02T18:26:46.161287900Z root         6  0.0  0.1   5752  3128 pts/0    S    18:17   0:00 bash2020-04-02T18:26:46.173982800Z root        10  0.0  0.0   3848    84 ?        Ss   18:23   0:00 stress --cpu 3 2020-04-02T18:26:46.175428400Z root        16 34.8  0.0   3848   104 ?        R    18:23   1:09 stress --cpu 3 2020-04-02T18:26:46.176339800Z root        17  7.3  0.0   4752  1116 ?        R    18:23   0:14 stress --cpu 3 2020-04-02T18:26:46.195406100Z root        18 34.5  0.0   3848   104 ?        R    18:23   1:09 stress --cpu 3 2020-04-02T18:26:46.209743900Z root        19  7.2  0.0   4752  1116 ?        R    18:23   0:14 stress --cpu 3 2020-04-02T18:26:46.227952400Z root        20 34.9  0.0   3848   104 ?        R    18:23   1:09 stress --cpu 3 2020-04-02T18:26:46.260353100Z root        21  7.5  0.0   4752  1116 ?        R    18:23   0:15 stress --cpu 3 2020-04-02T18:26:46.260426000Z root        22  7.5  0.0   4752  1116 ?        R    18:23   0:15 stress --cpu 3 2020-04-02T18:26:46.260461200Z root        23  7.5  0.0   4752  1116 ?        R    18:23   0:15 stress --cpu 3 2020-04-02T18:26:46.260611100Z root        36  0.1  0.0   3848   920 ?        Ss   18:26   0:00 stress --cpu 3 2020-04-02T18:26:46.260713200Z root        41 16.2  0.0   3848    96 ?        R    18:26   0:04 stress --cpu 3 2020-04-02T18:26:46.260744900Z root        42  4.2  0.0   4744  1360 ?        R    18:26   0:01 stress --cpu 3 2020-04-02T18:26:46.317686400Z root        43 15.0  0.0   3848    96 ?        R    18:26   0:04 stress --cpu 3 2020-04-02T18:26:46.319885300Z root        44  4.0  0.0   4744  1360 ?        R    18:26   0:01 stress --cpu 3 2020-04-02T18:26:46.352726000Z root        45 14.5  0.0   3848    96 ?        R    18:26   0:04 stress --cpu 3 2020-04-02T18:26:46.353036600Z root        46  3.8  0.0   4744  1360 ?        R    18:26   0:01 stress --cpu 3 2020-04-02T18:26:46.353068700Z root        47  3.8  0.0   4744  1360 ?        R    18:26   0:01 stress --cpu 3 2020-04-02T18:26:46.373440200Z root        48  4.5  0.0   4744  1360 ?        R    18:26   0:01 stress --cpu 3 2020-04-02T18:26:46.373601900Z root        49  0.2  0.0   4240   776 ?        Ss   18:26   0:00 timeout 120 pyt2020-04-02T18:26:46.417833800Z root        54  3.2  1.2  33652 24744 ?        S    18:26   0:00 python app.py2020-04-02T18:26:46.430977100Z root        56  3.8  0.9  29204 19400 ?        R    18:26   0:00 /usr/local/bin/2020-04-02T18:26:46.473037800Z root        57  0.0  0.1   9392  2964 pts/0    R+   18:26   0:00 ps -aux